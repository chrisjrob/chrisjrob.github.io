---+ Blog

<<<---
%TOC%
<<<---



{image_left|icon_rss.gif|http://www.bootpolish.net/rss/home_blog.rss} {Subscribe to RSS Feed|http://www.bootpolish.net/rss/home_blog.rss}


---++ 23/02/2011: Moving to Wordpress

I've decided to move to a proper blogging platform, rather than continue to use my home grown solution.  Please update your feed reader to:

   * http://chrisjrob.wordpress.com/feed/

I did consider setting up my own Wordpress server, but rightly or wrongly I decided to save myself the effort, time will tell whether that was the right decision or not!

---++ 17/02/2011: HP Proliant DL360G5 / DL380G5 Temperature Monitoring

I don't have the HP Management suite installed on my HP Proliant servers, largely because they proved to be a huge resource hog, but I would like to be able to monitor stuff.  On PCs I am used to being able to use lm-sensors, so thought I'd give that a go.  Installing it prompted me to install ipmitool, which in turn needs openipmi.

%RAW%
<pre>
# apt-get install lm-sensors openipmi ipmitool
</pre>
%RAW%

Then I ran the standard sensors-detect command, accepting YES for all options (I was feeling quite brave):

%RAW%
<pre>
# sensors-detect
</pre>
%RAW%

This ended up writing the following into /etc/modules:

%RAW%
<pre>
# Generated by sensors-detect on Thu Feb 17 18:04:48 2011
# You must also install and load the IPMI modules
ipmi-si
# Chip drivers
# Warning: the required module ipmisensors is not currently installed
# on your system. For status of 2.6 kernel ports check
# http://www.lm-sensors.org/wiki/Devices. If driver is built
# into the kernel, or unavailable, comment out the following line.
ipmisensors

# no driver for SMSC SCH4307 Super IO Fan Sensors yet
coretemp
</pre>
%RAW%

To test this without rebooting I typed the commands in succession, but found that ipmisensors did not exist, some googling suggested the module to be "ipmi_devintf", and that indeed seemed to work:

%RAW%
<pre>
# modprobe ipmi-si
# modprobe ipmi_devintf
# modprobe coretemp
</pre>
%RAW%

So the additions to my /etc/modules now looked like this:

%RAW%
<pre>
# Generated by sensors-detect on Thu Feb 17 18:04:48 2011
# You must also install and load the IPMI modules
ipmi-si
# Chip drivers
# Warning: the required module ipmisensors is not currently installed
# on your system. For status of 2.6 kernel ports check
# http://www.lm-sensors.org/wiki/Devices. If driver is built
# into the kernel, or unavailable, comment out the following line.
# ipmisensors
ipmi_devintf

# no driver for SMSC SCH4307 Super IO Fan Sensors yet
coretemp
</pre>
%RAW%

And then I tested the commands with:

%RAW%
<pre>
# sensors
# ipmitool sensors
</pre>
%RAW%

Both of which commands brought back sensible information.  Now I just need to work out how to incorporate this into nagios with nrpe, but that can wait for another day.

---++ 07/02/2011: Etherpad on Debian Squeeze

Just installed Etherpad on our openvz server.  Having created an openvz guest for the purpose, running Debian Squeeze, installing Etherpad proved no more difficult than adding the Etherpad repository to your /etc/apt/sources.list:

%RAW%
<pre>
$ sudo su
# echo "deb http://apt.etherpad.org all ." &gt;&gt; /etc/apt/sources.list
# apt-get update
# apt-get install etherpad
</pre>
%RAW%

All the requisite dependencies were brought in.  Unfortunately the etherpad server did not start after installation, and I had to do the following commands:

%RAW%
<pre>
# sed -i.orig 's/local/share/' /etc/init.d/etherpad
</pre>
%RAW%

Then it started perfectly simply with /etc/init.d/etherpad start.

To make this happen automatically on boot:

%RAW%
<pre>
# update-rc.d etherpad defaults
</pre>
%RAW%

If you would prefer to use openjdk than sun-java (and you should), then google for "etherpad openjdk".  Sorry to say I was in too much of a hurry on this occasion.

Further reading:

   * http://etherpad.org/
   * http://sis.bthstudent.se/2011/525/how-to-install-etherpad-on-debian-lenny/

---++ 05/12/2010: Skype 64-bit

When I bought my Toshiba laptop and opted for 64-bit Debian Squeeze I made one compromise, I gave up Skype.  This was for the simple reason that it would not work on 64-bit Linux (or 64-bit anything, come to that).  Later I heard from several people that you could install the 32-bit version using the 32-bit libraries, but I was conscious that this was sub-optimal and in any case Skype should be punished for being closed source and, perhaps more to the point, for not providing a 64-bit version.

Skype is important, though, for new Linux users.  It is no good telling them to use SIP, as their friends have Skype and most people do not want to make the sacrifices that some of us feel are necessary.

Feeling a little guilty, I decided to give it a go.  I was expecting to download the 32-bit version of Skype, and the 32-bit libraries, but was surprised to see a 64-bit version for Ubuntu.  Given that Ubuntu is based on Debian, it was worth a try.

   * http://www.skype.com/intl/en-gb/get-skype/on-your-computer/linux/post-download/

I installed it with:

%RAW%
<pre>
$ sudo dpkg -i skype-ubuntu-intrepid_2.1.0.81-1_amd64.deb
</pre>
%RAW%

And, erm, it seems to work.  Well at least the test call worked perfectly.

So we seem to be able to tick the Skype 64-bit box as "job done", now how about iTunes...

---++ 05/12/2010: Home Theatre PC - Continued

A while ago I wrote:

<<<---
For some reason it is not saving a bookmark when you stop watching a recorded program in the middle, so that you have to find where you were manually. This worked fine on our old machine, so just need to find out what is wrong. I can research this when I have time.
<<<---

Well I am delighted to say that this was fixed by an option in the Playing TV settings for saving bookmarks.

---++ 15/11/2010: Why building your own PC still makes sense

Which such cheap PCs now available, does it really make sense to build your own?  I think so, and these are the reasons why:

Despite the cheap PCs, there are still some direct savings to be made, obviously Linux users can save the Microsoft licence, but there are other savings too.  For example you can re-use components from your existing PC, this might be a short-term way of you getting the PC that you want, and then replacing the components over time.

Already have a keyboard, mouse and DVD/RW?  Reuse them - it's more environmentally friendly and, if they fail later, then you can always replace them and thus stagger the cost.  Why not plan to re-use your existing hard-drive, perhaps as a second drive or as a back-up drive, it'll make it easier to transfer data.  If you're trying to save money then you could build your PC using on-board graphics and then plan to buy a decent graphics card at a later stage.

Another advantage to building your own PC is that you get to choose the compromises that are made.  The cheapest components are incredibly cheap, so for example if you were planning to keep the base unit behind the sofa, then you could specify a £15 case, instead of a £100 case.

You also get to specify things like RAM - we've all gone to upgrade PCs, only to find that both slots have already been used - now you can make sure that you buy a single 2gb RAM with the knowledge that you can buy a second when you have more money.

It is this type of flexibility which still makes building your own compelling.

It is true that it takes longer to build your own, but I find the bulk of the time taken is in choosing the components, the build itself is usually no more than an hour, and I probably waste three hours in agonising over the purchase of the components!  The only thing that is tricky is in deciding which way around the different connectors go, but generally the booklets that come with the motherboard are very helpful, and failing that the Internet is a wonderful resource.

The ability to repair the device is I find not so much down to your experience of the build, but in your confidence that all the components are standard off-the-shelf items.  If you suspect that the graphics card is shot, then, buying a replacement is easy, because you know exactly what you need.

I tend to choose the CPU, then knowing the CPU I purchase a compatible motherboard, from there it is pretty simple to choose the case to fit the motherboard, and the rest of the items should be straightforward.  PSU obviously needs to be sensitive to the case, but if you have gone for a standard ATX case, that should not be an issue.

Alternatively https://www.lambda-tek.com/ have a PC Designer to do this for you, I have not used it myself yet, but it looks impressive.

If you want a small form factor device than visit http://linitx.com, who have knowledgeable people on the end of the phone to advise you.

---++ 28/10/2010: A quick and dirty install of LibreOffice on Debian

Following the forking of OpenOffice.org into LibreOffice under the auspices of the new Document Foundation, I decided that I should take a look.

First I removed OpenOffice:

%RAW%
<pre>
$ sudo apt-get --purge remove ".*openoffice.*"
</pre>
%RAW%

Then I visited:

   * http://download.documentfoundation.org/libreoffice/testing/

Downloading:

   * LibO_3.3.0_beta2_Linux_x86_install-deb_en-US.tar.gz
   * LibO_3.3.0_beta2_Linux_x86_langpack-deb_en-GB.tar.gz

Then, having checked that the md5sums matched, I extracted both with "tar -xvvzf" and changed to the DEBS directory in each and ran:

%RAW%
<pre>
$ sudo dpkg -i *.deb
</pre>
%RAW%

All very clumsy, but this was only my work PC, which isn't mission critical, as I generally use NX client to log into my desktop on our LTSP Server.

So what are my first impressions?  Sadly these will have to wait for another day, apart from the obvious branding change, I couldn't see much different, but the good news is that it does all appear to be working.

I am not sure whether LibreOffice yet has the http://go-oo.org patches, which I believe were included by default in Debian and Ubuntu, but the fact that they are being combined into the core must be good news.  I am really hoping that LibreOffice improves quickly on OpenOffice, which still falls considerably short of Microsoft Office for power users.  In particular Macros, Pivot Tables, Conditional Formatting, and Mailmerge all need a lot of work.  Not to speak of the appalling performance, it really is a system hog.  I can't help feeling that it really needs to be re-written from scratch, but I appreciate that is unrealistic.  In the meantime I have hopes that KOffice will soon step up to the mark - KWord's mailmerge feature is a lesson in simplicity that OpenOffice/LibreOffice would do well to learn.

---++ 18/10/2010: Installing Ruby on Rails

I need a way of creating some quick and dirty web apps for internal use.  To this end, I decided to give Ruby on Rails a try.  Unfortunately it is in heavy development and the Debian packages have not kept up.  I decided to try and install from source, and, after several blind alleys, I ended up with quite a simple installation...

   * {Install Ruby on Rails3 on Debian Lenny}

---++ 14/10/2010: Home Theatre PC - Continued

A quick post regarding the issue of myth-backend having to be restarted on every boot, this was easily fixed simply by editing the upstart configuration /etc/init/myth-backend.conf and adding "and udev" to the "start on" line.  Now Myth comes up correctly first time every time!

---++ 28/09/2010: Westminster eForum - Open Source

{image_right|westminster_eforum.png|http://bootpolish.net/downloads/westminster_eforum_presentation.pdf}

Earlier this week I went up to the {Westminster eForum|http://www.westminstereforum.co.uk/} to speak at the Keynote Seminar ~"Open source software: in business, in government"~.  The Westminster eForum provides an environment for policy makers in Parliament, Whitehall and government agencies to engage with key stakeholders.  The event was sponsored by {Sirius IT|http://www.siriusit.co.uk/}, the company which advised us on our move to Linux and who now provide ongoing support for our Linux servers.  

I caught a train from Woking, arriving promptly at 61 Whitehall at 0845.  I was greeted warmly by Bash, the person organising the seminar, who showed me around and took {my slideshow presentation|http://bootpolish.net/downloads/westminster_eforum_presentation.pdf}.

{Rupert Goodwins|http://www.zdnet.co.uk/blogs/ruperts-diary/}, Editor at {ZDNet UK|http://www.zdnet.co.uk}, was Chairman of the meeting and introduced {Karsten Gerloff|http://blogs.fsfe.org/gerloff/}, President of the {Free Software Foundation Europe|http://www.fsfe.org}.  I recognised some of the themes of his speech, including the definition of Free and Open Source and the "Four Freedoms", and I was already aware of some of the developments in countries like Brazil.  That said, I was not the target audience for his speech and I am sure that it must have been a powerful message for those MPs present.

There were four more speeches before mine, starting with Alan Lord of the {Open Learning Centre|http://www.theopenlearningcentre.com/}, an Open Source Software Consulting and Services business based in Surrey.  Alan discussed the challenges of Open Source, in particularly the challenge of procurement, given that standard procurement practices struggled with the concept of free software.  Alan went on to reassure the audience regarding the risks and vulnerability of Open Source.  This is something about which I feel passionately; to my mind, if you have the source code and access to that incredible resource "The Internet" then any risks and vulnerabilities are solvable.  This is in stark contrast to proprietary software, where you are completely in the hands of the supplier.

Next up was Paul Holt, Corporate Sales Director at {Canonical|http://www.canonical.com}.  I was impressed that he avoided the temptation to do a big sell on Canonical, and this was a feature of all the speeches, no-one seemed to be overtly pushing their wares.  He did labour the point that Open Standards are what is important, much more so than Open Source, and in this he is undoubtedly right; the world would be a rosy place indeed if we all ran a combination of Open Source and proprietary systems, all of which worked together smoothly according to common open standards.

Andrew Katz from {Moorcrofts|http://www.moorcrofts.com/} went on to reassure the audience on the safety of running Open Source software as an end user.  I must confess that this was not something about which I was worried, but in the face of the usual FUD from its detractors, it was probably worthwhile to tackle this issue.  It was interesting to hear from Andrew that he often asks the Chief Financial Officer whether software contains any Free and Open Source software to be told that it doesn't, only to find that quizzing the Chief Technology Office gives the opposite answer.  Having written some simple scripts, I can't imagine how you could do so without using the miriad of Open Source libraries; it is interesting to hear that, all too often, proprietary software companies find exactly the same!

At last it was my turn.  Thanks to the magic of organisation, my slideshow was up and Rupert Goodwins had announced me.  Yikes.  I ran through {my speech|http://bootpolish.net/downloads/westminster_eforum_speech.pdf}, much as I rehearsed it, even remembering to switch between {slides|http://bootpolish.net/downloads/westminster_eforum_presentation.pdf}.  The speakers were only permitted to talk for a maximum of 5 minutes, with a yellow card being raised at 4 minutes and a red card at 5 minutes.  Nothing like a little time pressure to calm my nerves!  In the event I needn't have worried about yellow and red cards, as I completely forgot to look out for them anyway; hopefully my speech ended broadly on time!

Having been given the brief of the discussion, my first draft of the speech followed very closely to the other speakers, outlining the implementation of Open Source, the Challenges, and the Risks and Vulnerabilities.  After reading my rather poorly written offering, I decided that I should leave the other speakers to follow that pattern and to treat myself instead as a case study, not attempting to address any particular issues, but merely to run through what we had done and why.  My speech seemed fairly well received and I don't think I made too many mistakes.

I had expected that there would be questions after each speech, but in the event it seemed that questions were to be left for the end of all of our speeches.  I was somewhat astonished by the first question from Robert Onslow, in which he alluded to the fact that Open Source is not as flexible as proprietary software.  I apologise to Robert, as I did laugh; which was most rude of me, but if Open Source is anything, then it is flexible and thus I was so taken aback by such a question.  The fact is that Open Source is most often written as small components - "do one thing and do it well" - and combining these components together is what gives Open Source its incredible flexibility.  And the fact, of course, that you have access to the source code and have the option of paying a developer to make changes to it.

I also laboured my hobby horse regarding the benefit of having access to the source code.  I hear so many people, even Open Source users, saying that they don't think that having the source code is really that big a benefit.  I feel passionately that even non-developers can benefit from Open Source, partly through the wider community having access to the code, but also directly, by viewing the code to debug a problem, or even fix a simple typological bug.  The best example that I have was when KDE changed one of their environment paths, which broke kiosk-tool, I was delighted to be able to track down that error and fit it.  Similarly getting KAddressBook to work with LDAP resources needed a very simple code change.

There were a number of other questions, but none in which I played any key part.

After the session was a coffee break, and I got talking to Mark Taylor of Sirius and Rupert Goodwin and David Meyer from ZDNet UK.  David Meyer showed me his netbook running {Jolicloud|http://www.jolicloud.com}, which seemed to be a very professional and user friendly implementation of Linux, in which Linux, Windows and Web software are offered seamlessly from the software centre.  Very impressive, and I'll certainly be looking at that soon.

I regret that I did not stay for the remainder of the day; whilst it sounded very interesting, the majority was related to the public sector, which is not directly relevant to me.

Thank you to Bash at Westminster eForums and Mark Taylor of Sirius.  Oh, and Rupert Goodwins, for allowing me to share his taxi to the station when the heavens opened!

---++ 28/09/2010: QEMU-KVM Black Screen

I upgraded one of our servers yesterday, including an upgrade from the Debian Stable kvm72 package, to the Debian Backports qemu-kvm version 0.12.4, whereon I could no longer start our Windows Server 2003 virtual machine.  As soon as the machine started, it locked up completely with just a black screen, and had to be terminated with a kill -9 signal.  After a considerable time spent googling without any success, I decided to upgrade the Kernel from 2.6.26 to the backports 2.6.32 and normal operation was restored.  I mention this only in the hope that the next person who googles qemu-kvm black screen might be saved a considerable time searching for the solution!

---++ 21/09/2010: Home Theatre PC - Continued

I've been asked recently for an update on how my HTPC is performing.  Well the good news is that we are now using it as our main system, and pretty much everything is working perfectly, including:

   * Live TV - Pause Rewind etc
   * Programme Guide
   * Schedule Recordings
   * MythVideo (for ripped DVDs)
   * MythWeb (personal webpage for controlling Myth and viewing programme guide)

The best news is that Audio is now working over HDMI; although to be honest, I don't believe I ever fixed this, so I suspect I just hadn't tested it properly.  All I did was select the Audio over HDMI setting in KDE Control Centre and it just worked.

So what is left to fix?

   * System does not shutdown automatically - this is normal behaviour for MythTV, but I prefer to have it shutdown when not in use.  This is a neat feature actually, as it will literally completely shutdown with a timer set in the bios to come on for the next schedule.  Hopefully I can sort this out soon.
   * MythTV Backend needs to be restarted every time the machine is powered up - this is a known issue and may even have been sorted; having been without Internet for the past three weeks, I have no idea where we are.  Basically on first boot we just type $ sudo service mythtv-backend restart.  Obviously if there is no fix, it would be simple enough to add to the start-up process.
   * My card has dual tuners, so can record one thing and watch another, or record two things.  I have now read that some channels are on the same "mux" and that you can therefore record multiple programs on a single card.  I need to research this further, but sounds exciting.
   * For some reason it is not saving a bookmark when you stop watching a recorded program in the middle, so that you have to find where you were manually.  This worked fine on our old machine, so just need to find out what is wrong.  I can research this when I have time.
   * The case fans are a little noisier than they ought to be, so really need replacing for silent alternatives.

And, not MythTV related, but I am still struggling with KDE4, Akonadi and our Contacts in Kontact.  I suspect this may be related to the use of MySQL for both MythTV and Akonadi.  In the meantime my wife is using Gmail, but obviously would prefer to have Kontact back.

---++ 18/09/2010: Desktop Wallpaper

When I launched our first LTSP server, I was very keen to make the system as pleasurable for the users as possible; to this end, I left users able to customise their desktop pretty much how they liked.  I decided that this free-for-all had gone too far, when I saw customers sitting in front of one user's computer, sporting a desktop wallpaper of his baby son.  At the time I just set a system default of a fairly neutral blue / dark blue radial gradient, and put an item on my to-do list to create a desktop wallpaper.

Those who read my earlier post regarding {KDE Wallpaper|#26/06/2010: kde wallpaper} may have seen examples, and basically I created a red background with company logo and a few lighting affects, making suitable wallpapers for most of the common screen sizes.  It was when I went to implement these wallpapers that I realised that I had a problem - KDE only allows you to force one single wallpaper to all users, regardless of screen size.  I could allow the users to set their own wallpaper, from a select list, but it would be impossible to restrict them only to that list.  And what if they hop from one computer to another - the screen size will be wrong again.  No, I needed a way of changing the wallpaper at login to the correct wallpaper for their screensize, and that meant a perl script running at login.  The task could be broken into three parts:

   # Determine screen size
   # Choose best wallpaper
   # Set wallpaper

To determine the screen size, I used a small Perl Tk routine:

%RAW%
<pre>
sub get_screen_size {
        use Tk;
        my $mw=tkinit;
        $mw->withdraw;
        return($mw->screenwidth, $mw->screenheight, $mw->screendepth);
}
</pre>
%RAW%

To select the best wallpaper, I found this far more complicated that I would have liked - the issue is that NX users have screen sizes that are non-standard, so I couldn't rely on exact matches.  In any case, if I relied on perfect matches I would have been creating new wallpapers for each and every obscure monitor resolution.  The best approach I found was to score each wallpaper based on aspect, width and height, calculating the percentage error for each compared to the users screen size, summing the errors and picking the wallpaper with the lowest error.  Logically aspect would be far more important that the other errors, so I trebled the aspect error to make that the dominant criteria.

Lastly, I set the wallpaper using a simple dcop command:

%RAW%
<pre>
`dcop kdesktop KBackgroundIface setWallpaper "$newwallpaper" 6`;
</pre>
%RAW%

After testing it thoroughly, I inserted a shortcut to the script in all users' Autostart directories last night.

I arrived this morning to the comment ~"it's a bit bright any chance we could tone it down a bit"~.

I was very polite.

