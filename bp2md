#!/usr/bin/perl
#
# bp2md.pl
# Convert Bootpolish to Markdown format

use strict;
use warnings;
use File::Slurp;

my @files = <>;
convert_files(\@files);

exit;

sub convert_file {
    my $file = shift;

    my $infile = $file;
    my $intext = read_file( $infile );

    my $outtext = $intext;

    # Remove boxes
    $outtext =~ s/[<>]{3}\-{3,}\s*\n//gms;

    # Remove TOC
    $outtext =~ s/%TOC%\s*?\n//gms;

    # Remove RAW
    $outtext =~ s/%RAW%\s*?\n//gms;

    # Remove PRE formatting
    $outtext =~ s/^\<\/?pre\>\s*?\n//gms;

    # Indent $
    $outtext =~ s/^[\$]/    \$/gms;

    # $replace lt gt signs
    $outtext =~ s/&lt;/</g;
    $outtext =~ s/&gt;/>/g;

    # Remove exclamations and questions
    $outtext =~ s/^\<[!?]\>\s?(.*?)$/**$1**/gms;

    # Convert hyperlinks
    $outtext =~ s/{(.+?)\|(.+?)}/[$1]($2)/gms;

    # Convert italics
    $outtext =~ s/~(.*?)~/*$1*/gms;

    # Grab title
    $outtext =~ s/^\#+\s*(.*?)\n+//ms;
    my $title = $1;

    # Remove double blank lines
    $outtext =~ s/\n{3,}/\n\n/gms;

    # Reduce headers
    $outtext =~ s/\#{3}/##/gms;

    my $header =<<END;
---
layout: page
title: Howto | $title
menu: howto
weight: 40
category: technology
tags: [linux]
---

END

    rename($infile, "$infile.orig") or die "Cannot rename $infile to $infile.orig: $!";
    write_file( $infile, $header . $outtext );
}

sub convert_files {
    my $mdfiles = shift;

    foreach my $file (@{$mdfiles}) {
        chomp($file);
        convert_file($file);
    }
}



